# HF.py
#Metodo de Hartree Simple aplicado al atomo de Helio, basandonos en la Secc 2. del Seminario
import numpy as np
# Numero atomico del Helio
Z = 2
# Numero de Iteraciones a realizar en la rutina:
num_iter = 20
# Parametros declarados en la Tabla 1:
eps_1 = -Z**2/2
eps_2 = -Z**2/8
# and then the six Coulomb integrals:
I_1111 = 5/8 * Z
I_1112 = 2**12*np.sqrt(2)/27/7**4 * Z
I_1122 = 16/9**3 * Z
I_1212 = 17/3**4 * Z
I_1222 = 2**9*np.sqrt(2)/27/5**5 * Z
I_2222 = 77/2**9 * Z
# Abriendo 3 archivos, uno para el valor de theta calculado en cada iteracion, uno para la energia total del atomo de 2 electrones, y uno
#asociado con la energia del orbital:
f_theta = open("theta.dat", "w")
f_total_energy = open("total_energy.dat", "w")
f_orbital_energy = open("orbital_energy.dat", "w")
# Inicializando el procedimiento de HF SFC :
c_1 = 0
c_2 = 0
# Iteracion del metodo
for i in range(num_iter):
	
	F_11 = eps_1 + I_1111*c_1**2\
			+ 2*I_1112*c_1*c_2 + I_1212*c_2**2 # Eq. (23)
	F_12 = I_1112*c_1**2 + 2*I_1122*c_1*c_2\
			+ I_1222*c_2**2 # Eq. (24)
	F_21 = F_12 # Eq. (25)
	F_22 = eps_2 + I_1212*c_1**2\
			+ 2*I_1222*c_1*c_2 + I_2222*c_2**2 # Eq. (26)

# calculo de la energia [Eq. (13)]:
	total_energy = 2*(eps_1*c_1**2 + eps_2*c_2**2)\
		+ I_1111*c_1**4 + 4*I_1112*c_1**3*c_2\
		+ 2*(2*I_1122+I_1212)*c_1**2*c_2**2\
		+ 4*I_1222*c_1*c_2**3 + I_2222*c_2**4

	f_total_energy.write("{} {}\n".format(i, total_energy))

	
	# calculo de la menor raiz del polinomio cuadratico caracteristico de Hartree-Fock:
	orbital_energy = 0.5*(F_11 + F_22)\
						- np.sqrt(0.25*(F_11 - F_22)**2 + F_12*F_21)
	f_orbital_energy.write("{} {}\n".format(i+1, orbital_energy))
	#Calculo de theta en el paso siguiente (se deduce de las ecuaciones expuestas en el seminario) 
	theta = np.arctan ((orbital_energy - F_11)/F_12) if F_12 !=0  else np.pi/2
	f_theta.write("{} {}\n".format(i, theta))
	c_1 = np.cos(theta) # Eq. (16)
	c_2 = np.sin(theta) # Eq. (17)

f_theta.close()
f_total_energy.close()
f_orbital_energy.close()
